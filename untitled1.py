# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EOKRdhQgUXDpm-VWi7NT0e25Uja7BX1D
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("kemical/kickstarter-projects")

print("Path to dataset files:", path)


import pandas as pd

# 1) 다운로드된 폴더 내 CSV 파일 경로 지정
csv_path = f"{path}/ks-projects-201801.csv"

# 2) CSV 불러오기
df = pd.read_csv(csv_path)


# 2. 성공/실패 필터링 및 숫자 변환
df = df[df['state'].isin(['successful', 'failed'])]
df['state'] = df['state'].map({'successful': 1, 'failed': 0})

# 3. 후원자 수 결측치 확인 및 0으로 채우기 (만약 있으면)
df['backers'] = df['backers'].fillna(0)

# 4. 사용할 변수: 목표 금액(goal), 후원자 수(backers)
processed_df = df[['goal', 'backers', 'state']]

# 5. CSV로 저장
processed_df.to_csv("kickstarter_processed.csv", index=False)

print("✅ 후원자 수 포함 전처리 완료! 'kickstarter_processed.csv' 생성됨")

# model_train.py

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
import joblib

# 1. 전처리된 데이터 불러오기
df = pd.read_csv("kickstarter_processed.csv")

# 2. 결측치 제거 및 인덱스 초기화 (혹시 모를 경우에 대비)
df_clean = df.dropna(subset=['goal', 'backers', 'state']).reset_index(drop=True)

# 3. 입력 변수(X)와 타겟(y) 설정
X = df_clean[['goal', 'backers']]
y = df_clean['state']

print(f"샘플 개수: X={len(X)}, y={len(y)}")  # 여기서 0이 아니어야 정상

# 4. train/test 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. 모델 학습
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# 6. 모델 저장
joblib.dump(model, 'kickstarter_model.pkl')

print("✅ 모델 학습 및 저장 완료!")